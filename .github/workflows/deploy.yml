name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test Python syntax
      run: |
        python -m py_compile main.py
        python -m py_compile main_local.py
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      
    - name: Configure Docker
      run: gcloud auth configure-docker
      
    - name: Build and push Docker image
      run: |
        # Build the Docker image
        docker build -t gcr.io/${{ secrets.PROJECT_ID }}/ai-bot:${{ github.sha }} .
        
        # Push the image to Google Container Registry
        docker push gcr.io/${{ secrets.PROJECT_ID }}/ai-bot:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ai-bot \
          --image gcr.io/${{ secrets.PROJECT_ID }}/ai-bot:${{ github.sha }} \
          --region europe-west1 \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --min-instances 0 \
          --timeout 300 \
          --set-env-vars BOT_TOKEN=${{ secrets.BOT_TOKEN }},POSTER_TOKEN=${{ secrets.POSTER_TOKEN }},PROJECT_ID=${{ secrets.PROJECT_ID }}
          
    - name: Show deployment URL
      run: |
        echo "ðŸš€ Deployment completed!"
        echo "Service URL: https://ai-bot-$(echo ${{ secrets.PROJECT_ID }} | cut -d'-' -f4)-uc.a.run.app"